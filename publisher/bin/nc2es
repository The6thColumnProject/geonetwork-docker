#!/bin/bash
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $SCRIPT_DIR/../helper.sh
local_env
#remove last param
array=( )
while [[ "$1" ]]; do
    case "$1" in
        --json_dump_dir) 
            #mount and replace for container
            json_dump_dir="$2"
            array+=( "$1" )
            array+=( "/json_dump" )
            shift 2
            continue
            ;;
        -n) container="$2"  #container holding an elastic search for deployment
            shift 2
            continue
            ;;
    esac
    array+=( "$1" )
    shift
done
last_arg=${array[${#array[@]}-1]}
unset array[${#array[@]}-1]

#reset positional parameters to what's left
set -- "${array[@]}"

#find the root dir and share that with the container
if [[ -f "$last_arg" ]]; then
    data="$(dirname "$(fullpath "$last_arg")")"
    target="/data/$(basename "$(fullpath "$last_arg")")"
elif [[ -d "$last_arg" ]]; then
    data="$(fullpath "$last_arg")"
else
    #this is something else...
    target="$last_arg"
fi

options="$options $DOCKER_EXTENDED_ENV"

if [[ "$container" ]]; then
    options="$options --link $container:es"
fi
if [[ "$data" ]]; then
    data_root=/"$(cut -d '/' -f2<<<"$data")"
    options="$options -v $data_root:$data_root -e DATA_PATH2=$data -e DATA_ROOT=$data_root"
    [[ -z "$target" ]] && target="$data" #/data_root/${data#?*/}
fi
if [[ "$json_dump_dir" ]]; then
    options="$options -v "$(fullpath "$json_dump_dir")":/json_dump"
fi
docker run --rm -e HOST_USER=$(id -u) -e HOST_USER_GROUP=$(id -g) $options $image /scripts/bootstrap.sh /scripts/to_json.py "$@" "$target"
